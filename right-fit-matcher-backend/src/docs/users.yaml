paths:
  /api/users:
    get:
      summary: Get all users
      description: Retrieve a list of all user profiles
      tags: [Users]
      responses:
        200:
          description: List of users retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
        500:
          description: Internal server error
    post:
      summary: Create a new user profile
      description: Register a new user profile for saving search history
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
              properties:
                name:
                  type: string
                  example: "John Doe"
                email:
                  type: string
                  format: email
                  example: "john@example.com"
                gmat:
                  type: integer
                  minimum: 0
                  maximum: 800
                  example: 700
                gpa:
                  type: number
                  minimum: 0
                  maximum: 4
                  example: 3.5
                work_exp:
                  type: number
                  example: 3
                target_program:
                  type: string
                  enum: [MBA, MS, MSCS, MSDS, PhD]
                  example: "MBA"
      responses:
        201:
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: "John Doe"
                  email:
                    type: string
                    example: "john@example.com"
                  gmat:
                    type: integer
                    example: 700
                  gpa:
                    type: number
                    example: 3.5
                  work_exp:
                    type: number
                    example: 3
                  target_program:
                    type: string
                    example: "MBA"
        400:
          description: Invalid input or user already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal server error

  /api/users/{id}:
    get:
      summary: Get a user by ID
      description: Retrieve details of a specific user profile
      tags: [Users]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: User ID
          example: 1
      responses:
        200:
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal server error

  /api/users/{id}/searches:
    get:
      summary: Get user's search history
      description: Retrieve the search history for a specific user
      tags: [Users]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: User ID
          example: 1
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            default: 10
          description: Maximum number of search results to return
          example: 5
      responses:
        200:
          description: User search history retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  searches:
                    type: array
                    items:
                      $ref: "#/components/schemas/Search"
              example:
                searches:
                  - id: 1
                    user_id: 1
                    query:
                      gmat: 700
                      gpa: 3.5
                      work_exp: 3
                      target_program: "MBA"
                    results:
                      - university_id: 1
                        name: "Stanford University"
                        probability: 0.8524
                        compatibility: 0.892
                        details:
                          s_gmat: 0.962
                          s_gpa: 0.875
                          s_work: 0.833
                    created_at: "2023-10-26T10:00:00Z"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal server error
